server {
   # Le nom de domaine utilisé pour le serveur. Le serveur répondra à domain.tld et www.domain.tld
   server_name domain.tld www.domain.tld;

   # Définit le dossier racine où Nginx va chercher les fichiers.
   # Symfony utilise généralement un dossier 'public' comme dossier web accessible.
   root /usr/src/app/public;  # Symfony utilise habituellement un dossier 'public'

   # Configuration de la localisation de la racine du site
   location / {
       # Nginx essaie d'abord de servir le fichier correspondant à l'URI demandée.
       # Si le fichier n'existe pas, il redirige vers index.php (Symfony gère toutes les requêtes via index.php)
       try_files $uri /index.php$is_args$args;
   }

   # Gestion des requêtes vers index.php
   location ~ ^/index\.php(/|$) {
       # Spécifie le service PHP utilisé par Nginx pour traiter les requêtes PHP,
       # ici défini comme le service PHP sur le port 9000 (lié à docker-compose.yml).
       fastcgi_pass php:9000;  # Correspond au service PHP dans docker-compose.yml

       # Sépare le chemin de la requête pour les fichiers PHP et les paramètres supplémentaires après le fichier PHP
       fastcgi_split_path_info ^(.+\.php)(/.*)$;

       # Inclut les paramètres FastCGI par défaut (nécessaires pour exécuter des scripts PHP)
       include fastcgi_params;

       # Spécifie le fichier script à exécuter. Ici, Nginx combine la racine du document
       # et le nom du script pour déterminer le chemin complet.
       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

       # Définit la racine du document (le répertoire public de Symfony)
       fastcgi_param DOCUMENT_ROOT $document_root;

       # Directive interne : cela signifie que cet emplacement ne peut pas être appelé directement par un client.
       internal;
   }

   # Gestion de tous les autres fichiers PHP
   location ~ \.php$ {
       # Spécifie à nouveau le service PHP, utilisé pour traiter toutes les requêtes .php
       fastcgi_pass php:9000;

       # Indique le fichier index à appeler si une requête PHP n'a pas de fichier spécifique
       fastcgi_index index.php;

       # Détermine le chemin complet du fichier PHP à exécuter
       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

       # Inclut les paramètres FastCGI nécessaires pour exécuter les scripts PHP
       include fastcgi_params;
   }

   # Fichier pour enregistrer les logs d'erreurs Nginx (liés à ce serveur)
   error_log /var/log/nginx/project_error.log;

   # Fichier pour enregistrer les logs des accès au serveur Nginx
   access_log /var/log/nginx/project_access.log;
}